from django.db import models
import uuid
from django.contrib.auth.models import AbstractUser

class User(AbstractUser):
    name = models.CharField(max_length=75, unique=True, default="")

    username = models.CharField(
        'username',
        max_length=150,
        unique=True,
        help_text='autogenerated uuid',
        validators=[AbstractUser.username_validator],
        error_messages={
            'unique': "A user with that username already exists.",
        },
        blank = True
    )

    def __str__(self):
        return self.name

    class Meta:
        ordering = ['name']


#I don't fill out the username field, I only fill out the name field -- so this autofills the username filed with some uuid
def random_username(sender, instance, **kwargs):
    if not instance.username:
        instance.username = uuid.uuid4().hex[:30]
models.signals.pre_save.connect(random_username, sender=User)
